@page "/"

@using MusicAuthenticationSystem.Data

@inject UserRepository UserRepo
@inject PianoService pianoService
@inject NavigationManager navManager

<h2>Welcome, please enter your credentials.</h2>

<div class="row m-4">
    <div class="col-5 bg-light m-2 justify-content-start">
        <div class="p-3 mb-3 bg-dark text-white text-center">
            Log in
        </div>
        <div class="col-5 bg-light m-2 justify-content-start">
            <EditForm Model="@user">
                <label for="username">Username</label>
                <input type="text" id="username" @bind-value="@user.Username" />
            </EditForm>
        </div>
        <div class="col-10 bg-light m-2 justify-content-start">
            <button class="btn btn-primary mb-1" @onclick="(() => Authenticate())">Submit and Login</button>
            <p hidden="@messageHandler">@message</p>
        </div>
    </div>
</div>
<PianoView isLogin="true"></PianoView>

@code {
    private User user = new User();
    private string message = "";
    private bool messageHandler = true;

    private void Authenticate()
    {
        string pass = pianoService.firstPass;
        string userName = user.Username;
        string nullCheck = userName == null || userName == ""? 
            "Username cannot be empty!" : "Melody must first be entered and confirmed!";

        if (pass == null || userName == null || userName == "")
        {
            messageHandler = false;
            message = nullCheck;
        }
        else if (UserRepo.MatchPassword(user, pass))
        {
            messageHandler = false;
            navManager.NavigateTo("/userpage/" + user.Username);

        }
        else
        {
            messageHandler = false;
            message = "Incorrect user or melody, please start over";
        }
    }
}
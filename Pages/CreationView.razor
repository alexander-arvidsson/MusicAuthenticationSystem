@page "/create"

@using MusicAuthenticationSystem.Data

@inject UserRepository UserRepo
@inject CreationRepository  CreationRepo

<h1>Welcome, please enter your credentials.</h1>

<div class="row m-5">
    <div class="col-5 bg-light m-2 justify-content-start">
        <div class="p-3 mb-3 bg-dark text-white text-center">
            Log in
        </div>
        <div class="col-5 bg-light m-2 justify-content-start">
            <EditForm Model="@user" OnValidSubmit="Create">
                <label for="username">Username</label>
                <input class="m-1" type="text" id="username" @bind-value="@user.Username" />
                <label for="password">Password</label>
                <input class="m-1" type="text" id="password" @bind-value="@user.Password" />
                <label for="password">Confirm password</label>
                <input class="m-1" type="text" id="passwordTwo" @bind-value="@passwordTwo" />
                <button class="btn btn-primary mb-1" type="submit">Submit</button>
                <p hidden="@messageHandler">@msg</p>
            </EditForm>
                <button class="btn btn-primary" type="button" @onclick="RepeatPassword">Repeat password</button> <p hidden="@repeatHandler">@repeatPassword</p>
        </div>
    </div>
</div>

@code {

    User user = new User();
    string passwordOne = "";
    string passwordTwo = "";
    string msg = "";
    string repeatPassword = "";

    bool messageHandler = true;
    bool repeatHandler = true;


    public void Create()
    {
        if (Confirmation())
        {
            CreationRepo.CreateUserAsync(user);
            msg = "Account created!";
            messageHandler = false;
        }
    }

    public bool Confirmation()
    {
        if (user.Password.Equals(passwordTwo))
            return true;


        msg = "Passwords do not match";
        messageHandler = false;

        return false;
    }

    public void RepeatPassword()
    {

    }


}